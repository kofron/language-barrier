name: Publish to Crates.io

on:
  push:
    branches: ['main']

env:
  CARGO_TERM_COLOR: always

jobs:
  test_and_publish:
    name: Test and Publish
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Run tests
      run: cargo test --workspace --verbose
      env:
        RUST_BACKTRACE: 1
    
    - name: Get version from Cargo.toml
      id: get_version
      run: |
        CURRENT_VERSION=$(grep -m 1 "version" language-barrier-core/Cargo.toml | sed 's/.*"\(.*\)".*/\1/')
        echo "VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
    
    - name: Check if version exists on crates.io
      id: check_version
      run: |
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://crates.io/api/v1/crates/language-barrier-core/${{ steps.get_version.outputs.VERSION }})
        if [ "$HTTP_STATUS" -eq 200 ]; then
          echo "VERSION_EXISTS=true" >> $GITHUB_OUTPUT
        else
          echo "VERSION_EXISTS=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Publish to crates.io
      if: steps.check_version.outputs.VERSION_EXISTS == 'false'
      run: |
        cargo login ${{ secrets.CRATES_IO_TOKEN }}
        cd language-barrier-core && cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}